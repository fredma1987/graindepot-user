package com.zhoubi.graindepot.biz;import com.alibaba.fastjson.JSONObject;import com.zhoubi.graindepot.base.BaseMapper;import com.zhoubi.graindepot.base.BaseService;import com.zhoubi.graindepot.bean.BaseMenu;import com.zhoubi.graindepot.bean.BaseResourceAuthority;import com.zhoubi.graindepot.entity.AuthorityMenuTree;import com.zhoubi.graindepot.entity.MenuTree;import com.zhoubi.graindepot.mapper.BaseMenuMapper;import com.zhoubi.graindepot.mapper.BaseResourceAuthorityMapper;import com.zhoubi.graindepot.util.TreeUtil;import org.springframework.beans.BeanUtils;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.*;@Servicepublic class BaseMenuBiz extends BaseService<BaseMenu>  {	@Autowired	private BaseMenuMapper BaseMenuMapper;	@Autowired	private BaseResourceAuthorityMapper baseResourceAuthorityMapper;	@Override	protected BaseMapper<BaseMenu> getMapper() {		return BaseMenuMapper;	}	public List<MenuTree> getMenusByUserId(int userid, Integer parentid) {		return getMenuTree(getUserAuthorityMenuByUserId(userid), parentid);	}	public List<BaseMenu> getUserAuthorityMenuByUserId(int id){		return BaseMenuMapper.selectAuthorityMenuByUserId(id);	}	private List<MenuTree> getMenuTree(List<BaseMenu> menus, int root) {		List<MenuTree> trees = new ArrayList<MenuTree>();		MenuTree node = null;		for (BaseMenu menu : menus) {			node = new MenuTree();			BeanUtils.copyProperties(menu, node);			trees.add(node);		}		List<MenuTree> list = TreeUtil.bulid(trees, root);		return list;	}	public List<AuthorityMenuTree> getAuthorityMenu(int ugroupid) {		Map m=new HashMap();		m.put("ugroupid",ugroupid);		m.put("authoritytype","ugroup");		List<BaseMenu> menus = BaseMenuMapper.selectMenuByAuthorityId(m);		List<AuthorityMenuTree> trees = new ArrayList<AuthorityMenuTree>();		AuthorityMenuTree node = null;		for (BaseMenu menu : menus) {			node = new AuthorityMenuTree();			node.setText(menu.getTitle());			BeanUtils.copyProperties(menu, node);			trees.add(node);		}		return trees;	}	/**	 * 变更群组关联的菜单	 * @param ugroupidd	 * @param menuTrees	 */	public void modifyAuthorityMenu(int userid,int ugroupid,String authoritytype, List<AuthorityMenuTree> menuTrees){		Map e=new HashMap();		e.put("Where_ugroupid",ugroupid);		e.put("Where_resourcetype","menu");		baseResourceAuthorityMapper.deleteMap(e);		BaseResourceAuthority authority = null;		List<BaseResourceAuthority> list=new ArrayList<BaseResourceAuthority>();		int i=0;		for(AuthorityMenuTree menuTree:menuTrees){			i++;			authority = new BaseResourceAuthority();			authority.setUgroupid(ugroupid);			authority.setAuthoritytype(authoritytype);			authority.setResourceid(menuTree.getMenuid());			authority.setResourcetype("menu");			authority.setCreatetime(new Date());			authority.setCreateuserid(userid);			list.add(authority);		}		baseResourceAuthorityMapper.insertList(list);	}}